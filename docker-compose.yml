version: '3.8'

secrets:
  jira_auth_token:
    file: ./mosura/jira_auth_token
  jira_auth_user:
    file: ./mosura/jira_auth_user
  jira_domain:
    file: ./mosura/jira_domain
  jira_label_okr:
    file: ./mosura/jira_label_okr
  jira_project:
    file: ./mosura/jira_project

services:
  caddy:
    # TODO: better way of specififying profiles, syncing with IPs, etc
    profiles:
      - applebox
    container_name: caddy
    image: quay.io/thekevjames/caddy-security:2.7.4-1.1.19
    command: caddy run --config /config/caddy/Caddyfile --adapter caddyfile
    restart: unless-stopped
    env_file:
      - ./secrets/google.env
    volumes:
      - ./caddy:/config/caddy:Z

  # TODO: configure ssh tunneling
  # TODO: consider https://github.com/linuxserver/docker-mods/tree/universal-cloudflared
  cloudflared:
    profiles:
      - applebox
    container_name: cloudflared
    image: docker.io/cloudflare/cloudflared:2023.10.0@sha256:c18744ae1767c17c5562cc731c24e64a5a2f93f35c3dd6629b90dedaff6dff8f
    command: tunnel run
    restart: unless-stopped
    volumes:
      - ./cloudflared:/home/nonroot/.cloudflared:Z

  docker-socket-proxy:
    container_name: docker-socket-proxy
    image: ghcr.io/tecnativa/docker-socket-proxy:0.1.1
    ports:
      - 2375:2375
    restart: unless-stopped
    environment:
      - CONTAINERS=1
      - POST=0
      - SERVICES=0
      - TASKS=0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  homepage:
    profiles:
      - applebox
    container_name: homepage
    image: ghcr.io/gethomepage/homepage:v0.8.2
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - /mnt/1tb:/mnt/1tb
      - /mnt/4tb:/mnt/4tb
      - ./homepage:/app/config:Z

  # TODO: expose domain?
  jellyfin:
    profiles:
      - applebox
    container_name: jellyfin
    image: quay.io/linuxserver.io/jellyfin:10.8.13
    ports:
      - 1900:1900/udp
      - 7359:7359/udp
      - 8096:8096
    restart: unless-stopped
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Etc/UTC
      - UMASK=002
    volumes:
      - /mnt/4tb/movies:/data/media/movies
      - /mnt/4tb/shows:/data/media/shows
      - ./jellyfin:/config:Z

  mosura:
    profiles:
      - applebox
    container_name: mosura
    image: quay.io/thekevjames/mosura:latest
    restart: unless-stopped
    environment:
      - MOSURA_APPDATA=/data
      - MOSURA_HEADER_USER_EMAIL=X-Token-User-Email
      - MOSURA_PORT=8080
    secrets:
      - jira_auth_token
      - jira_auth_user
      - jira_domain
      - jira_label_okr
      - jira_project
    volumes:
      - ./mosura:/data:Z

  # TODO: expose domain
  photoprism:
    profiles:
      - applebox
    container_name: photoprism
    image: photoprism/photoprism:231021
    working_dir: "/photoprism"
    ports:
      - 2342:2342
    restart: unless-stopped
    # https://dl.photoprism.app/docker/docker-compose.yml
    # TODO: use config files? https://docs.photoprism.app/getting-started/config-files/
    environment:
      - PHOTOPRISM_ADMIN_USER=admin
      - PHOTOPRISM_ADMIN_PASSWORD=insecure
      # TODO: use "public" and offload auth to caddy?
      - PHOTOPRISM_AUTH_MODE=password
      - PHOTOPRISM_SITE_URL=http://localhost:2342/
      - PHOTOPRISM_DISABLE_TLS=false
      - PHOTOPRISM_DEFAULT_TLS=true
      - PHOTOPRISM_ORIGINALS_LIMIT=5000
      - PHOTOPRISM_HTTP_COMPRESSION=gzip
      - PHOTOPRISM_LOG_LEVEL=info
      # TODO: set readonly (and add :ro to original mount) if I set up eg. digikam
      - PHOTOPRISM_READONLY=false
      - PHOTOPRISM_EXPERIMENTAL=false
      - PHOTOPRISM_DISABLE_CHOWN=false
      - PHOTOPRISM_DISABLE_WEBDAV=false
      - PHOTOPRISM_DISABLE_SETTINGS=false
      - PHOTOPRISM_DISABLE_TENSORFLOW=false
      - PHOTOPRISM_DISABLE_FACES=false
      - PHOTOPRISM_DISABLE_CLASSIFICATION=false
      - PHOTOPRISM_DISABLE_VECTORS=false
      - PHOTOPRISM_DISABLE_RAW=false
      - PHOTOPRISM_RAW_PRESETS=false
      - PHOTOPRISM_JPEG_QUALITY=100  # default: 85
      - PHOTOPRISM_DETECT_NSFW=false
      - PHOTOPRISM_UPLOAD_NSFW=true
      - PHOTOPRISM_DATABASE_DRIVER=sqlite
      - PHOTOPRISM_SITE_CAPTION="AI-Powered Photos App"
      - PHOTOPRISM_SITE_DESCRIPTION=""
      - PHOTOPRISM_SITE_AUTHOR=""
      - PHOTOPRISM_UID=1000
      - PHOTOPRISM_GID=1000
      - PHOTOPRISM_UMASK=0002
      # TODO: install tensorflow etc?
      # - PHOTOPRISM_INIT: "tensorflow"  # options: (update https gpu tensorflow davfs clitools clean)
    user: "1000:1000"
    volumes:
      - /mnt/4tb/sync/images/import:/photoprism/import
      - /mnt/4tb/sync/images/library:/photoprism/originals
      - ./photoprism:/photoprism/storage:Z

  pihole:
    profiles:
      - bmaxbox
    container_name: pihole
    image: docker.io/pihole/pihole:2023.11.0
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 8888:80
    restart: unless-stopped
    environment:
      - DNSMASQ_LISTENING=all
      - TZ=Etc/UTC
    volumes:
      - ./pihole/config:/etc/pihole:Z
      - ./pihole/dnsmasq:/etc/dnsmasq.d:Z

  # TODO: expose domain
  prowlarr:
    profiles:
      - bmaxbox
    container_name: prowlarr
    image: quay.io/linuxserver.io/prowlarr:1.10.5
    ports:
      - 9696:9696
    restart: unless-stopped
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Etc/UTC
      - UMASK=002
    volumes:
      - ./prowlarr:/config:Z

  # TODO: expose domain
  qbittorrent:
    profiles:
      - bmaxbox
    container_name: qbittorrent
    image: ghcr.io/hotio/qbittorrent:release-4.5.5
    ports:
      - 8080:8080
    restart: unless-stopped
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Etc/UTC
      - UMASK=002
    volumes:
      - /mnt/1tb/torrents:/data/torrents
      - ./qbittorrent:/config:Z

  # TODO: expose domain
  radarr:
    profiles:
      - bmaxbox
    container_name: radarr
    image: quay.io/linuxserver.io/radarr:5.1.3
    ports:
      - 7878:7878
    restart: unless-stopped
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Etc/UTC
      - UMASK=002
    volumes:
      - /mnt/1tb/torrents:/data/torrents
      - /mnt/4tb/movies:/data/media/movies
      - ./radarr:/config:Z

  # TODO: expose domain
  sonarr:
    profiles:
      - bmaxbox
    container_name: sonarr
    image: quay.io/linuxserver.io/sonarr:3.0.10
    ports:
      - 8989:8989
    restart: unless-stopped
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Etc/UTC
      - UMASK=002
    volumes:
      - /mnt/1tb/torrents:/data/torrents
      - /mnt/4tb/shows:/data/media/shows
      - ./sonarr:/config:Z

  # TODO: expose domain?
  syncthing:
    container_name: syncthing
    image: quay.io/linuxserver.io/syncthing:1.26.1
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Etc/UTC
      - UMASK=002
    volumes:
      - /mnt/4tb/sync:/data/sync
      - ./syncthing:/config:Z

  unpackerr:
    profiles:
      - bmaxbox
    container_name: unpackerr
    image: ghcr.io/hotio/unpackerr:release-0.12.0
    restart: unless-stopped
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Etc/UTC
      - UMASK=002
    volumes:
      - /mnt/1tb/torrents:/data/torrents
      - ./unpackerr:/config:Z
